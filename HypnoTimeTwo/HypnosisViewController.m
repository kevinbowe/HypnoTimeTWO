//
//  HypnososViewController.m
//  HypnoTimeOne
//
//  Created by Kevin Bowe on 6/27/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import "HypnosisViewController.h"
#import "HypnosisView.h"

@implementation HypnosisViewController

- (void) accelerometer:(UIAccelerometer *)meter didAccelerate:(UIAcceleration *)accel
{
    //...NSLog(@"%f, %f, %f", [accel x], [accel y], [accel z]);    
    HypnosisView *hv = (HypnosisView *)[self view];
    
    // Low pass filter to eliminate jerkey feeling...
    float xShift = [hv xShift] * 0.8 + [accel x] * 2.0;
    float yShift = [hv yShift] * 0.8 - [accel y] * 2.0;
    [hv setXShift:xShift];
    [hv setYShift:yShift];
    
    
    [hv setXShift:10.0 * [accel x]];
    [hv setYShift:-10.0 * [accel y]];
    
    // Redraw the view...
    [hv setNeedsDisplay];
}



- (void) viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    NSLog(@"Monitoring accelerometer");
    UIAccelerometer *a = [UIAccelerometer sharedAccelerometer];
    
    // Receive updates every 1/10th of a second...
    [a setUpdateInterval:0.1];
    [a setDelegate:self];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [[UIAccelerometer sharedAccelerometer] setDelegate:nil];
}

- (void) loadView
{
    HypnosisView *hv = [[HypnosisView alloc] initWithFrame:CGRectZero];
    [hv setBackgroundColor:[UIColor whiteColor]];
    [self setView:hv];
    [hv release];
}

/*
// This code block demonstrates scrolling between two pages.  Pages 'snap' into place so
// we don't see part of either view - only the complete view.
// This code does NOT use HypnosisView or CurrentTime.
-(void) loadView
{
    CGRect frame = [[UIScreen mainScreen] applicationFrame];
    UIScrollView *sv = [[[UIScrollView alloc]
                         initWithFrame:frame] autorelease];
    frame.origin.y = 0;
    UIView *aView = [[[UIView alloc] 
                      initWithFrame:frame] autorelease];
    
    frame.origin.x += frame.size.width;
    UIView *bView = [[[UIView alloc] 
                     initWithFrame:frame] autorelease];
    
    [aView setBackgroundColor:[UIColor redColor]];
    [bView setBackgroundColor:[UIColor greenColor]];
    
    [sv addSubview:aView];
    [sv addSubview:bView];
    
    // ContentSize should be wide enough for 2x pages...
    [sv setContentSize:CGSizeMake(2 * frame.size.width, frame.size.height)];
    
    [sv setPagingEnabled:YES];
    
    [self setView:sv];
    
}
*/ // Sample Code - Two Page scrolling


- (id) init
{
    // Call the superclass's designed initializer...
    [super initWithNibName:nil bundle:nil];
    
    // Get the tab bar item...
    UITabBarItem *tbi = [self tabBarItem];
    
    // Give it a label...
    [tbi setTitle:@"Hypnosis"];
    
    /*
     Add Code to display the Hypnosis Icon 
     */
    
    // Create a UIImage from a file...
    UIImage *i = [UIImage imageNamed:@"Hypno.png"];
    
    // Put the image onthe tab bar item...
    [tbi setImage:i];
    
    return self;    
}


// This method gets called automatically when the view is created...
- (void) viewDidLoad
{
    [super viewDidLoad];
    
    // Removed for [git:feature/CreateViewsForControllers+] branch...
    // Set the background color of the view so we can see it...
    //...[[self view] setBackgroundColor:[UIColor orangeColor]];   
}


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    // Disregard parameters - nib name is an implementation detail...
    return [self init];

    /*  This code was generated by xCode...
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
    */  // xCode Generated...
}

- (void)dealloc
{
    [super dealloc];
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

/*
// Implement loadView to create a view hierarchy programmatically, without using a nib.
- (void)loadView
{
}
*/

/*
// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad
{
    [super viewDidLoad];
}
*/

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
